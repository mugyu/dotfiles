-- $PATH形式で環境変数を展開
use "dollar"
-- サブコマンドの補完
use "subcomplete"
-- pecoを色々と使用
use "peco"
-- auto ls
use "autols"

-----------------------------------------------------------------
-- 環境変数
-----------------------------------------------------------------
set{
  PROMPT = "$e[31;40;1m[$P]$_$$ $e[37;1m",
  SCRIPTLIB = "%HOME%\\script",
  TERM = "msys",
  EDITOR = "gvim --remote-tab-wait-silent",
  PAGER = "less",
  LESS = "-i -M -R",
  GREP_OPTiONS = "--color=auto",
  SSL_CERT_FILE = "%HOME%\\.config\\openssl\\cacert.pem",
  TOOLS_PATH = "C:\\tools",
  MSYS_PATH = "%TOOLS_PATH%\\msys",
  GIT_PATH = "%TOOLS_PATH%\\git",
  DOTNET_PATH = "C:\\WINDOWS\\Microsoft.NET\\Framework64\\v4.0.30319",
}

-- golang
set {
  GOROOT = "%TOOLS_PATH%/go",
  GOPATH = "%HOME%/go",
}
addpath("%GOROOT%\\bin")

-----------------------------------------------------------------
-- path
-----------------------------------------------------------------
addpath("%GIT_PATH%\\mingw64\\bin")
addpath("%GIT_PATH%\\usr\\bin")
addpath("%GIT_PATH%\\bin")
addpath("%MSYS_PATH%\\x86_64-w64-mingw32\\bin")
addpath("%MSYS_PATH%\\mingw64\\bin")
addpath("%MSYS_PATH%\\usr\\bin")
addpath("%MSYS_PATH%")
addpath("%TOOLS_PATH%\\nodejs")
addpath("%TOOLS_PATH%\\vim")
addpath("%TOOLS_PATH%\\bin")
addpath("C:\\Program Files (x86)\\Google\\Cloud SDK\\google-cloud-sdk\\bin")
addpath("%SCRIPTLIB%\\batfile")

-----------------------------------------------------------------
-- alias
-----------------------------------------------------------------
alias {
  csc = "%DOTNET_PATH%\\csc.exe",
  vbc = "%DOTNET_PATH%\\vbc.exe",
  jsc = "%DOTNET_PATH%\\jsc.exe",
  MSBuild = "%DOTNET_PATH%\\MSBuild.exe",
}

alias {
  cp = "cp -i",
  rm = "rm -i",
  mv = "mv -i",
  ll = "ls -l",
  la = "ls -a",
}

alias {
  vi = "vim",
}

alias {
  nkf = "nkf -s",
  gosh = "%TOOLS_PATH%\\Gauche\\bin\\gosh.exe",
  peco = "nkf -m0 -w -u | peco.exe",
}

-- chdir
nyagos.alias.cd = function(args)
  local path = ""
  if args[1] then
    path = args[1]
  else
    path = ""
  end

  if not nyagos.exec("__cd__ " .. path) then
    io.stderr:write(path .. ": no such directory\n")
    return
  end
  nyagos.exec("__ls__ -F -o")
end

-------------------------------------------------------------------
-- suffix
-------------------------------------------------------------------
suffix(".pl", {"perl"})
suffix(".py", {"ipy"})
suffix(".rb", {"ruby"})
suffix(".lua", {"lua"})
suffix(".awk", {"gawk","-f"})
suffix(".js", {"cscript","//nologo"})
suffix(".vbs", {"cscript","//nologo"})
suffix(".ps1", {"powershell","-file"})

suffix(".wsf", {"cscript","//nologo"})
suffix(".txt", {"less"})

-------------------------------------------------------------------
-- prompt
-------------------------------------------------------------------
share.prompt = nyagos.prompt
nyagos.prompt = function(this)
  local branch_name = get_current_branch()
  if (branch_name ~= "") then
    return share.prompt(branch_name .. this)
  end
  return share.prompt(this)
end

get_current_branch = function()
  local handle = io.popen("git rev-parse --abbrev-ref @", "r")
  local branch_name = handle:read("*a"):gsub("%s+", "") or ""
  handle:close()
  if (branch_name ~= "") then
    return "$e[96;40;1m[" .. branch_name .. "]$e[37;1m"
  end
  return ""
end

-------------------------------------------------------------------
-- comspec
-------------------------------------------------------------------
for _, name in pairs {
  "notepad",
  "taskmgr",
  "mspaint",
  "write",
  "gvim",
} do
    nyagos.alias[name] = "%COMSPEC% /c start " .. name .. " $*"
end

-------------------------------------------------------------------
-- functions
-------------------------------------------------------------------
nyagos.alias.gitbra = function(this)
  local branch = nyagos.eval("git branch | fzf")
  if branch == "" then
    print("")
  else
    nyagos.exec("git co " .. string.match(branch, "^%*? ?(.*)"))
  end
end
-- vim:set ft=lua: --
